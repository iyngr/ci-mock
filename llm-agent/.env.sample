# ========================================
# LLM Agent Service Environment Variables
# ========================================
# Copy this file to .env and fill in your actual values

# ========================================
# APPLICATION SETTINGS
# ========================================
# FastAPI application settings
APP_NAME="Smart Mock AI Service"
APP_VERSION="0.1.0"
DEBUG=false
LOG_LEVEL=info

# Server configuration
HOST=0.0.0.0
PORT=8000
WORKERS=1

# ========================================
# MICROSOFT AUTOGEN CONFIGURATION
# ========================================
# Microsoft AutoGen AgentChat Framework Settings

# Azure OpenAI Model Configuration (Primary)
AZURE_OPENAI_ENDPOINT=https://your-openai-resource.openai.azure.com/
AZURE_OPENAI_API_KEY=your-azure-openai-api-key
AZURE_OPENAI_API_VERSION=2024-09-01-preview
AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4o
AZURE_OPENAI_MODEL=gpt-4o

# Alternative: Use Azure AD authentication (recommended for production)
# Leave AZURE_OPENAI_API_KEY empty to use Azure AD instead
# AZURE_CLIENT_ID=your-client-id
# AZURE_CLIENT_SECRET=your-client-secret
# AZURE_TENANT_ID=your-tenant-id

# AutoGen AgentChat Logging Configuration
AUTOGEN_ENABLE_TRACE_LOGGING=true
AUTOGEN_ENABLE_EVENT_LOGGING=true
AUTOGEN_LOG_LEVEL=INFO

# Agent Configuration
MAX_AGENT_ITERATIONS=10
MAX_CONVERSATION_ROUNDS=25
ENABLE_AGENT_REFLECTION=true
AGENT_TIMEOUT_SECONDS=300

# ========================================
# AZURE COSMOS DB CONFIGURATION
# ========================================
# Cosmos DB endpoint and credentials
COSMOS_DB_ENDPOINT=https://your-cosmos-account.documents.azure.com:443/
COSMOS_DB_KEY=your-cosmos-db-primary-key

# Database and container names
COSMOS_DB_NAME=ci-assessment-platform
COSMOS_SUBMISSIONS_CONTAINER=Submissions
COSMOS_ASSESSMENTS_CONTAINER=Assessments
COSMOS_GENERATED_QUESTIONS_CONTAINER=GeneratedQuestions

# Alternative: Use Entra ID authentication (recommended for production)
# Set to true to use DefaultAzureCredential instead of connection string
USE_MANAGED_IDENTITY=false

# ========================================
# SECURITY SETTINGS
# ========================================
# JWT configuration (if needed for auth)
SECRET_KEY=your-super-secret-jwt-key-change-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS settings
CORS_ORIGINS=["http://localhost:3000", "https://your-frontend-domain.com"]
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=["GET", "POST", "PUT", "DELETE"]
CORS_ALLOW_HEADERS=["*"]

# ========================================
# AGENT CONFIGURATION
# ========================================
# Multi-agent workflow settings
MAX_CONSECUTIVE_AUTO_REPLY=10
MAX_GROUP_CHAT_ROUNDS=15
AGENT_TIMEOUT=300

# Agent behavior settings
USE_DOCKER_FOR_CODE_EXECUTION=false
ENABLE_HUMAN_INPUT=false

# ========================================
# CACHING AND PERFORMANCE
# ========================================
# Question generation caching
ENABLE_QUESTION_CACHE=true
CACHE_TTL_HOURS=24

# Request timeout settings
REQUEST_TIMEOUT=120
HTTP_TIMEOUT=30

# ========================================
# MONITORING AND LOGGING
# ========================================
# Application Insights (optional)
APPLICATIONINSIGHTS_CONNECTION_STRING=your-app-insights-connection-string

# Logging configuration
LOG_FORMAT=json
LOG_FILE_PATH=./logs/app.log
LOG_ROTATION_SIZE=10MB
LOG_RETENTION_DAYS=30

# ========================================
# DEVELOPMENT SETTINGS
# ========================================
# Only for development environment
DEVELOPMENT_MODE=false
RELOAD_ON_CHANGE=false
ENABLE_SWAGGER_UI=true
ENABLE_REDOC=true

# ========================================
# EXTERNAL SERVICE INTEGRATIONS
# ========================================
# Integration with main assessment platform
MAIN_API_ENDPOINT=http://localhost:8000
MAIN_API_KEY=your-main-api-key

# Judge0 API (if needed for code execution)
JUDGE0_API_URL=https://judge0-ce.p.rapidapi.com
JUDGE0_API_KEY=your-judge0-api-key

# ========================================
# DOCKER CONFIGURATION
# ========================================
# Settings when running in Docker
DOCKER_ENV=false
CONTAINER_PORT=8000

# Health check settings
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3